generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  activeChar    Int?
  accounts      Account[]
  sessions      Session[]
  characters    Character[]
}

model Character {
  id                 Int                 @id @default(autoincrement())
  userEmail          String?
  name               String              @db.VarChar(50)
  avatar             String              @db.VarChar(255)
  x                  Int 
  y                  Int 
  User               User?               @relation(fields: [userEmail], references: [email]) // foreign key referencing User.id
  Buildings          Buildings?
  Tasks_Construction Task_Construction[]
  Tasks_Naval        Task_Naval[]
  Armada             Armada?
  ShipGroup          ShipGroup[]
}

model Buildings {
  characterID Int       @id
  building0   Int
  Character   Character @relation(fields: [characterID], references: [id])
}

model Armada {
  characterID Int       @id
  shipGroupID Int       @unique
  ShipGroup   ShipGroup @relation(fields: [shipGroupID], references: [id])
  Character   Character @relation(fields: [characterID], references: [id])
}

model ShipGroup {
  id          Int          @id @default(autoincrement())
  characterID Int
  ship0       Int
  Tasks_Naval Task_Naval[]
  Armada      Armada?
  Character   Character    @relation(fields: [characterID], references: [id])
}

model Task_Construction {
  id           Int              @id
  completed    DateTime
  characterID  Int
  buildingtype ConstructionType
  Character    Character        @relation(fields: [characterID], references: [id])
}

model Task_Naval {
  id          Int         @id
  completed   DateTime
  characterID Int
  destination Int
  missionType MissionType
  ShipGroup   ShipGroup   @relation(fields: [id], references: [id])
  Character   Character   @relation(fields: [characterID], references: [id])
}

enum ConstructionType {
  Ship
  Building
}

enum MissionType {
  Attack
  Protect
  Scout
}

// ? means optional | [] means "one to many" relation

// How to reference CharacterType? Probably code below:
// characterType CharacterType @default(Roman)
